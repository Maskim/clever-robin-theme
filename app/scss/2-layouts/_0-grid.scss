/*
Grid

Markup: ../../../components/grid/grid.html.twig

Style guide: components.grid
 */

.container {
  width: 100%;
  margin: 0 auto;
  max-width: em($container-size);
  box-sizing: border-box;

  @include mq($from: mobile) {
    padding-left: rem($grid-padding);
    padding-right: rem($grid-padding);
  }

  @include mq($until: mobile) {
    padding-left: rem($grid-padding-mobile);
    padding-right: rem($grid-padding-mobile);
  }

  &-padding {
    @include mq($from: mobile) {
      padding-top: rem($vertical-gutter * 2);
      padding-bottom: rem($vertical-gutter * 2);
    }

    @include mq($until: mobile) {
      padding-top: rem($vertical-gutter);
      padding-bottom: rem($vertical-gutter);
    }
  }
}

/*
Grid Row

.row        - Init flex grid from 0 to Infinite
.row-sm     - Init flex grid from mobile(380px) to Infinite
.row-ld     - Init flex grid from landscape(560px) to Infinite
.row-md     - Init flex grid from tablet(740px) to Infinite
.row-lg     - Init flex grid from desktop(980px) to Infinite
.row-xlg    - Init flex grid from large(1300px) to Infinite
.row-wide   - Init flex grid from wide(1640px) to Infinite

Markup: ../../../components/grid/row.html.twig

Style guide: components.grid.row
 */
@mixin row() {
  display: flex;
  flex-wrap: wrap;
  flex-direction: row;
  margin-left: rem(-$grid-padding / 2);
  margin-right: rem(-$grid-padding / 2);

  .col {
    padding-left: rem(ceil(($grid-padding / 2)));
    padding-right: rem(floor(($grid-padding / 2)));
  }
}

.row {
  @include row;
}

@include mq($from: mobile) {
  .row-sm {
    @include row;
  }
}

@include mq($from: landscape) {
  .row-ld {
    @include row;
  }
}

@include mq($from: tablet) {
  .row-md {
    @include row;
  }
}

@include mq($from: desktop) {
  .row-lg {
    @include row;
  }
}

@include mq($from: large) {
  .row-xlg {
    @include row;
  }
}

@include mq($from: wide) {
  .row-wide {
    @include row;
  }
}

/*
Grid Row settings

.justify-center         - Add justify-content: center; to row
.justify-flex-end       - Add justify-content: flex-end; to row
.justify-space-between  - Add justify-content: space-between; to row
.align-start            - Add align-items: flex-start; to row
.align-center           - Add align-items: center; to row
.align-end              - Add align-items: flex-end; to row
.align-stretch          - Add align-items: stretch; to row
.no-wrap                - Add flex-wrap: nowrap; to row

Markup: ../../../components/grid/row-settings.html.twig

Style guide: components.grid.row-settings
 */
.justify-center {
  justify-content: center;
}

.justify-flex-end {
  justify-content: flex-end;
}

.justify-space-between {
  justify-content: space-between;
}

.align-start {
  align-items: flex-start;
}

.align-center {
  align-items: center;
}

.align-end {
  align-items: flex-end;
}

.align-stretch {
  align-items: stretch;
}

.no-wrap {
  flex-wrap: nowrap;
}

@include make-grid-columns;
@include make-grid(xs);

@include mq($from: mobile) {
  @include make-grid(sm);
}

@include mq($from: landscape) {
  @include make-grid(ld);
}

@include mq($from: tablet) {
  @include make-grid(md);
}

@include mq($from: desktop) {
  @include make-grid(lg);
}

@include mq($from: large) {
  @include make-grid(xlg);
}

@include mq($from: wide) {
  @include make-grid(wide);
}

.row-hard {
  @include make-grid-hard(xs);

  @include mq($from: mobile) {
    @include make-grid-hard(sm);
  }

  @include mq($from: landscape) {
    @include make-grid-hard(ld);
  }

  @include mq($from: tablet) {
    @include make-grid-hard(md);
  }

  @include mq($from: desktop) {
    @include make-grid-hard(lg);
  }

  @include mq($from: wide) {
    @include make-grid-hard(xlg);
  }
}
